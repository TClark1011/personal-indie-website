---
import "@/styles/reset.scss";
import "@/styles/fonts.scss";
import "@/styles/global.scss";
import Link from "@/components/link.astro";
import Panel from "@/components/panel.astro";

type NavItem = {
	href: string;
	label: string;
};

const NAV_ITEMS: NavItem[] = [
	{ href: "/", label: "Home" },
	{ href: "/sections/about-me", label: "About Me" },
	{ href: "/sections/keyboards", label: "Keyboards" },
	{ href: "/sections/cats", label: "Cats" },
];
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body>
		<div id="title-bar">
			<span class="label"> Thomas Clark </span>
		</div>
		<nav id="sections-nav">
			<button id="mobile-nav-toggle">
				<span>Pages</span>
				<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
					<path
						d="M4 6h16v2H4V6zm0 5h16v2H4v-2zm16 5H4v2h16v-2z"
						fill="currentColor"></path>
				</svg>
			</button>
			{
				NAV_ITEMS.map(({ href, label }) => (
					<Link class="link" href={href}>
						{label}
					</Link>
				))
			}
		</nav>

		<slot />

		<dialog id="mobile-nav">
			<Panel class="card">
				<nav id="mobile-nav-list">
					{
						NAV_ITEMS.map(({ href, label }) => (
							<Link class="link" href={href}>
								{label}
							</Link>
						))
					}
				</nav>
			</Panel>
		</dialog>
	</body>
</html>

<script>
	const mobileNavDialog: HTMLDialogElement =
		document.querySelector("#mobile-nav")!;
	const mobileNavToggle: HTMLButtonElement =
		document.querySelector("#mobile-nav-toggle")!;

	mobileNavToggle.addEventListener("click", () => {
		mobileNavDialog.showModal();
	});

	mobileNavDialog.addEventListener("click", (e) => {
		const clickedBackdrop = e.target === mobileNavDialog;
		if (clickedBackdrop) {
			mobileNavDialog.close();
		}
	});
</script>

<style lang="scss">
	@use "@/styles/mixins" as *;

	body {
		width: 100vw;
		min-height: 100vh;
	}

	#title-bar {
		display: flex;
		justify-content: center;
		align-items: center;

		width: 100%;
		height: 26px;

		background-color: var(--color-primary);
		border-bottom: 1px solid black;
	}

	#title-bar .label {
		display: flex;
		justify-content: center;
		align-items: center;

		height: 100%;
		background-color: black;

		color: white;
	}

	#sections-nav {
		display: flex;

		width: 100%;
		padding: 0 var(--spacing-2);

		background-color: var(--color-secondary);
		border-bottom: 1px solid black;
	}

	#sections-nav .link {
		--border-color: transparent;

		border-left: 1px solid var(--border-color);
		border-right: 1px solid var(--border-color);

		padding: 0 var(--spacing-1);

		&:hover,
		&[data-state="active"] {
			--border-color: black;
		}

		&::first-letter {
			text-decoration: underline;
			text-decoration-thickness: 1px;
		}

		@include breakpoint(max, $bp-mobile) {
			display: none;
		}
	}

	#mobile-nav-toggle {
		display: flex;
		justify-content: space-between;

		width: 100%;
		padding: var(--spacing-2) 0;

		font-family: var(--font-retro);

		@include breakpoint(min, $bp-mobile) {
			display: none;
		}
	}

	#mobile-nav-toggle svg {
		width: 24px;
		height: 24px;
	}

	#mobile-nav[open] {
		display: flex;
		justify-content: center;
		align-items: center;

		width: 100vw;
		height: 100vh;
	}

	#mobile-nav .card {
		width: 200px;
	}

	#mobile-nav #mobile-nav-list {
		display: flex;
		flex-direction: column;

		width: 100%;
		height: 100%;

		gap: var(--spacing-2);
	}

	#mobile-nav #mobile-nav-list .link {
		padding: var(--spacing-2) 0;
		text-decoration: underline;
	}
</style>
