---
/**
 * Unstyled link component with prefetching shorthand.
 *
 * If the link points to the current page, it will have
 * a `data-state="active"` attribute.
 */
import type { HTMLAttributes } from "astro/types";
import { catchFallback } from "@/utils";

type Props = HTMLAttributes<"a"> & {
	href: string | URL;
	noPrefetch?: true;
	prefetch?: "tap" | "hover" | "viewport" | "load";
};

const { noPrefetch, prefetch, href, ...rest } = Astro.props;

const prefetchSpread = noPrefetch
	? {}
	: {
			"data-astro-prefetch": prefetch ?? "",
		};

const hrefPathname = catchFallback(
	() => new URL(href),
	() => new URL(href, Astro.url.origin),
).pathname;
const isActive = hrefPathname === Astro.url.pathname;
---

<a
	data-component-link
	class:list={["link", rest.class]}
	href={href}
	data-state={isActive ? "active" : ""}
	{...prefetchSpread}
	{...rest}
>
	<slot />
</a>
